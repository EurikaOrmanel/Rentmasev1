{"ast":null,"code":"var _jsxFileName = \"/Users/dishapanchal/Documents/GitHub/Rentmasev1/src/components/LocationButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as LocationIcon } from '../images/location.svg'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  border: 1px solid lightgrey;\n  background-color: white;\n  border-radius: 25px;\n  padding: 10px 10px;\n  margin-right: 30px; /* Add margin to separate it from the search bar */\n  cursor: pointer;\n  transition: border-color 0.3s ease, background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f0f0f0;\n    border-color: blue;\n  }\n\n  &:active {\n    border-color: blue;\n  }\n`;\n_c = Button;\nconst Icon = styled(LocationIcon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 10px;\n`;\n_c2 = Icon;\nconst LocationText = styled.span`\n  font-size: 1rem;\n  color: black;\n  margin-right: 10px;\n`;\n_c3 = LocationText;\nconst LocationButton = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState('Loading...');\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`).then(response => response.json()).then(data => {\n          const city = data.address.city || data.address.town || data.address.village || 'Unknown';\n          const country = data.address.country || 'Unknown';\n          const displayLocation = `${city.slice(0, 10)}... , ${country}`;\n          setCurrentLocation(displayLocation);\n        }).catch(error => {\n          console.error(error);\n          setCurrentLocation('Unable to retrieve location');\n        });\n      }, error => {\n        console.error(error);\n        setCurrentLocation('Unable to retrieve location');\n      });\n    } else {\n      setCurrentLocation('Geolocation not supported');\n    }\n  }, []);\n  const handleLocationChange = newLocation => {\n    setCurrentLocation(newLocation);\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationText, {\n        children: currentLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LocationButton, \"FfXC9S89wWdbSTi97jJNg5HM34w=\");\n_c4 = LocationButton;\nexport default LocationButton;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"LocationText\");\n$RefreshReg$(_c4, \"LocationButton\");","map":{"version":3,"names":["React","useState","useEffect","styled","ReactComponent","LocationIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","button","_c","Icon","_c2","LocationText","span","_c3","LocationButton","_s","modalOpen","setModalOpen","currentLocation","setCurrentLocation","toggleModal","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","fetch","then","response","json","data","city","address","town","village","country","displayLocation","slice","catch","error","console","handleLocationChange","newLocation","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/dishapanchal/Documents/GitHub/Rentmasev1/src/components/LocationButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as LocationIcon } from '../images/location.svg'; // Adjust the path as necessary\n\nconst Button = styled.button`\n  display: flex;\n  align-items: center;\n  border: 1px solid lightgrey;\n  background-color: white;\n  border-radius: 25px;\n  padding: 10px 10px;\n  margin-right: 30px; /* Add margin to separate it from the search bar */\n  cursor: pointer;\n  transition: border-color 0.3s ease, background-color 0.3s ease;\n\n  &:hover {\n    background-color: #f0f0f0;\n    border-color: blue;\n  }\n\n  &:active {\n    border-color: blue;\n  }\n`;\n\nconst Icon = styled(LocationIcon)`\n  width: 24px;\n  height: 24px;\n  margin-right: 10px;\n`;\n\nconst LocationText = styled.span`\n  font-size: 1rem;\n  color: black;\n  margin-right: 10px;\n`;\n\nconst LocationButton = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState('Loading...');\n\n  const toggleModal = () => {\n    setModalOpen(!modalOpen);\n  };\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${latitude}&lon=${longitude}`)\n            .then((response) => response.json())\n            .then((data) => {\n              const city = data.address.city || data.address.town || data.address.village || 'Unknown';\n              const country = data.address.country || 'Unknown';\n              const displayLocation = `${city.slice(0, 10)}... , ${country}`;\n              setCurrentLocation(displayLocation);\n            })\n            .catch((error) => {\n              console.error(error);\n              setCurrentLocation('Unable to retrieve location');\n            });\n        },\n        (error) => {\n          console.error(error);\n          setCurrentLocation('Unable to retrieve location');\n        }\n      );\n    } else {\n      setCurrentLocation('Geolocation not supported');\n    }\n  }, []);\n\n  const handleLocationChange = (newLocation) => {\n    setCurrentLocation(newLocation);\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <Button onClick={toggleModal}>\n        <Icon />\n        <LocationText>{currentLocation}</LocationText>\n      </Button>\n      \n    </>\n  );\n};\n\nexport default LocationButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}